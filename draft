import { WebViewerComponent, WebViewerSimpleDisplay, WebViewerProvider, useInstance } from '@pdftron/webviewer-react';
import { WebViewer } from '@pdftron/webviewer';

/**
 * Other requirements:
 * 
 * WebViewer will be a peer-dependency
 *    Not bundled with the hooks, user will have to install separately
 * 
 * Make open source
 *    Make sure no WebViewer source code is in repo (hence peer dependency)
 *    Create under PDFTron Public Repo
 * 
 * Needs to be published on NPM
 *  Use proper versioning
 * 
 * You are code owner!
 * 
 * Must use typescript
 *    Must also export types with package
 */

/**
 * Technology
 * 
 * Build tools / bundler
 *    esbuild
 */

/**
 * Future considerations (dont worry about for v1)
 * 
 * In the future, people may want to use more than one instance of WebViewer
 *    How do we handle this?
 * 
 * We'll want to add a bunch of utility hooks in the future
 *    - usePageControls
 *    - useXXX
 */


// Requirement 1, manually creating WebViewer and setting instance
function Inner() {
  const ref = useRef();
  const { instance, setInstance } = useInstance();
  useEffect(() => {
    WebViewer({
      // options
    }, ref.current).then(instance => {
      setInstance(instance)
    })
  }, [])

  return (
    <div ref={ref}></div>
  )
}

// Requirement 2, Using a webviewer component to render WebViewer
// Calls setInstance internally
function Inner() {
  return (
    // Internally calls setInstance, so now instance can be consumed
    <WebViewerComponent
      path='' // required
      initalDoc=''
    >

    </WebViewerComponent>
  )
}



// Requirement 3, React PDF clone
// Calls setInstance internally
function Inner() {
  return (
    // Internally calls setInstance, so now instance can be consumed
    // This could actually just wrap WebViewerComponent, but adds some settings to hide the UI
    <WebViewerSimpleDisplay
      path='' // required
      initalDoc=''
    >

    </WebViewerComponent>
  )
}

export default function App() {

  return (
    // instance = optional
    <WebViewerProvider instance={instance}>
      <Inner />
    </WebViewerProvider>
  )

}
